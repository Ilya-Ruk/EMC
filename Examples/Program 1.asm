ORG 0x000; Начинаем компилировать программу в память с адреса 0x000
GOTO Start; При включении микроконтроллера (запуск программы) и после аппаратного сброса переходим на метку Start - блок инициализации

ORG 0x004; Продолжаем компилировать программу в память с адреса 0x004
GOTO Interrupt; При возникновении прерывания переходим на метку Interrupt - блок обработки прерывания

; Блок инициализации

Start:
MOVW 0x00; Заносим константу b#00000000 в регистр W
MOVWF ConfigA; Копируем содержимое регистра W в регистр ConfigA - настраиваем все линии порта A на вывод (подключаем светодиоды)
MOVWF ConfigB; Копируем содержимое регистра W в регистр ConfigB - настраиваем все линии порта B на вывод (подключаем светодиоды)

MOVW 0xAA; Заносим константу b#10101010 в регистр W
MOVWF PortA; Копируем содержимое регистра W в регистр PortA - зажигаем 7, 5, 3 и 1 свето-диоды

MOVW 0x55; Заносим константу b#01010101 в регистр W
MOVWF PortB; Копируем содержимое регистра W в регистр PortB - зажигаем 6, 4, 2 и 0 свето-диоды

MOVW 0x03; Заносим константу b#00000011 в регистр W
MOVWF ConfigInt; Копируем содержимое регистра W в регистр ConfigInt - разрешаем прерыва-ния и в частности прерывание от переполнения таймера

CLRF Int; Очищаем регистр Int - сбрасываем все прерывания (запросы)

MOVW 0xF0; Заносим константу 0xF0 в регистр W
MOVWF TimerCounter; Копируем содержимое регистра W в регистр TimerCounter - устанавли-ваем начальное значение таймера

MOVW 0x01; Заносим константу b#00000001 в регистр W
MOVWF ConfigTimer; Копируем содержимое регистра W в регистр ConfigTimer - включаем таймер

L1:
GOTO L1; Организуем бесконечный цикл - ждем прерывания

; Блок обработки прерывания

Interrupt:
BCF Int, 0; Сбрасываем '0' бит в регистре Int - прерывание от таймера

MOVW 0xF0; Заносим константу 0xF0 в регистр W
MOVWF TimerCounter; Копируем содержимое регистра W в регистр TimerCounter - устанавли-ваем начальное значение таймера

NOTF PortA, 1; Инвертируем содержимое регистра PortA и заносим результат обратно в PortA
NOTF PortB, 1; Инвертируем содержимое регистра PortB и заносим результат обратно в PortB

RETI; Завершаем обработку прерывания и возвращаемся в основную программу (бесконечный цикл)
